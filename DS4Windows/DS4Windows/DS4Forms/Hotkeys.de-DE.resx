<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lbAbout.Size" type="System.Drawing.Size, System.Drawing">
    <value>731, 19</value>
  </data>
  <data name="lLChangelog.Location" type="System.Drawing.Point, System.Drawing">
    <value>7, 3</value>
  </data>
  <data name="lLChangelog.Size" type="System.Drawing.Size, System.Drawing">
    <value>86, 17</value>
  </data>
  <data name="lLChangelog.Text" xml:space="preserve">
    <value>Änderungen</value>
  </data>
  <data name="linkDonate.Location" type="System.Drawing.Point, System.Drawing">
    <value>588, 3</value>
  </data>
  <data name="linkDonate.Size" type="System.Drawing.Size, System.Drawing">
    <value>143, 17</value>
  </data>
  <data name="linkDonate.Text" xml:space="preserve">
    <value>über Paypal spenden</value>
  </data>
  <data name="lbHotkeys.Size" type="System.Drawing.Size, System.Drawing">
    <value>694, 458</value>
  </data>
  <data name="lbHotkeys.Text" xml:space="preserve">
    <value>Verstecke DS4 Controller: Verstecke DS4's Standard Eingabemethode (Dinput) vor anderen Programmen. Überprüfe, ob du Doppeleingaben in Spielen bekommst oder R2 das Spiel pausiert.

Drücke die linke Seite des Touchpads: Linker Touch
Drücke die rechte Seite des Touchpads: Rechter Touch
Drücke das Touchpad mit 2 Fingern: Multitouch
Drücke den oberen Teil des Touchpads: Oberer Touch

PS + Options oder halte PS für 10 Sekunden: Trenne Controller (nur bei Bluetooth)
Berühre Touchpad + PS: Schalte Touchpadbewegung aus (Klicken funktioniert weiterhin)

Touchpad unten rechts drücken*: Rechtsklick (Wird am besten mit der rechten Seite als Mausfunktion verwendet.)
Zwei Finger hoch/runter auf dem Touchpad*: Hoch/Runter blättern
Drücke und halte Touchpad*: Linke Maustaste ziehen
2 Finger Streichgeste auf dem Touchpad nach links oder rechts*: Blättere durch die Profile

Umschalt Modifikator: Halte eine Aktion, um ein anderes Steuerungsprofil auszuwählen.
Wenn Maus und Tastatur Zuordung:
Wechseln: Taste bleibt im "Gedrückt" Status, bis sie erneut gedrückt wird.
Makro: Weise mehrere Tasten einer Eingabe zu.
Scancode: Tasten werden unterschiedlich interpretiert. Kann für bestimmte Spiele notwendig sein.

*falls aktiviert</value>
  </data>
  <data name="tPHotkeys.Size" type="System.Drawing.Size, System.Drawing">
    <value>723, 421</value>
  </data>
  <data name="tPHotkeys.Text" xml:space="preserve">
    <value>Makros</value>
  </data>
  <data name="lbGermanT.Size" type="System.Drawing.Size, System.Drawing">
    <value>573, 22</value>
  </data>
  <data name="lbItalianT.Location" type="System.Drawing.Point, System.Drawing">
    <value>163, 22</value>
  </data>
  <data name="lbItalianT.Size" type="System.Drawing.Size, System.Drawing">
    <value>573, 22</value>
  </data>
  <data name="lbItalian.Location" type="System.Drawing.Point, System.Drawing">
    <value>4, 22</value>
  </data>
  <data name="lbRussian.Location" type="System.Drawing.Point, System.Drawing">
    <value>4, 44</value>
  </data>
  <data name="lbRussianT.Location" type="System.Drawing.Point, System.Drawing">
    <value>163, 44</value>
  </data>
  <data name="lbRussianT.Size" type="System.Drawing.Size, System.Drawing">
    <value>573, 22</value>
  </data>
  <data name="lbRomanian.Location" type="System.Drawing.Point, System.Drawing">
    <value>4, 66</value>
  </data>
  <data name="lbRomanianT.Location" type="System.Drawing.Point, System.Drawing">
    <value>163, 66</value>
  </data>
  <data name="lbRomanianT.Size" type="System.Drawing.Size, System.Drawing">
    <value>573, 22</value>
  </data>
  <data name="lbTurkish.Location" type="System.Drawing.Point, System.Drawing">
    <value>4, 88</value>
  </data>
  <data name="label2.Location" type="System.Drawing.Point, System.Drawing">
    <value>163, 88</value>
  </data>
  <data name="label2.Size" type="System.Drawing.Size, System.Drawing">
    <value>573, 22</value>
  </data>
  <data name="lbChineseS.Location" type="System.Drawing.Point, System.Drawing">
    <value>4, 110</value>
  </data>
  <data name="lbChineseST.Location" type="System.Drawing.Point, System.Drawing">
    <value>163, 110</value>
  </data>
  <data name="lbChineseT.Location" type="System.Drawing.Point, System.Drawing">
    <value>4, 132</value>
  </data>
  <data name="lbChineseTT.Location" type="System.Drawing.Point, System.Drawing">
    <value>163, 132</value>
  </data>
  <data name="lbArabic.Location" type="System.Drawing.Point, System.Drawing">
    <value>4, 154</value>
  </data>
  <data name="lbArabicT.Location" type="System.Drawing.Point, System.Drawing">
    <value>163, 154</value>
  </data>
  <data name="lbHebrew.Location" type="System.Drawing.Point, System.Drawing">
    <value>4, 176</value>
  </data>
  <data name="lbHebrewT.Location" type="System.Drawing.Point, System.Drawing">
    <value>163, 176</value>
  </data>
  <data name="tLPTranslators.Location" type="System.Drawing.Point, System.Drawing">
    <value>4, 173</value>
  </data>
  <data name="tLPTranslators.Size" type="System.Drawing.Size, System.Drawing">
    <value>715, 227</value>
  </data>
  <data name="lbTranslators.Location" type="System.Drawing.Point, System.Drawing">
    <value>8, 227</value>
  </data>
  <data name="lbTranslators.Size" type="System.Drawing.Size, System.Drawing">
    <value>82, 17</value>
  </data>
  <data name="lbTranslators.Text" xml:space="preserve">
    <value>Übersetzer:</value>
  </data>
  <data name="lbLinkText.Location" type="System.Drawing.Point, System.Drawing">
    <value>4, 400</value>
  </data>
  <data name="tPCredits.Size" type="System.Drawing.Size, System.Drawing">
    <value>723, 421</value>
  </data>
  <data name="tCAbout.Location" type="System.Drawing.Point, System.Drawing">
    <value>0, 19</value>
  </data>
  <data name="tCAbout.Size" type="System.Drawing.Size, System.Drawing">
    <value>731, 450</value>
  </data>
  <data name="$this.ClientSize" type="System.Drawing.Size, System.Drawing">
    <value>731, 469</value>
  </data>
  <data name="lbAbout.Text" xml:space="preserve">
    <value>DS4Windows - Jays2Kings Build (Version</value>
  </data>
  <data name="tPCredits.Text" xml:space="preserve">
    <value>Credits</value>
  </data>
</root>